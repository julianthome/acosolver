(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var397 () String)
(declare-fun var398 () String)
(declare-fun var400 () String)
(declare-fun var402 () String)
(declare-fun var404 () String)
(declare-fun var406 () String)
(declare-fun var407 () String)
(declare-fun var408 () Int)
(declare-fun var410 () String)
(declare-fun var411 () String)
(declare-fun var412 () String)
(declare-fun var413 () String)
(declare-fun var414 () String)
(declare-fun var416 () String)
(declare-fun var417 () String)
(declare-fun var419 () String)
(declare-fun var420 () String)
(declare-fun var422 () String)
(declare-fun var424 () String)
(declare-fun var426 () Int)
(declare-fun var429 () String)
(declare-fun var428 () String)
(declare-fun var430 () String)
(declare-fun var350 () String)
(declare-fun var352 () String)
(declare-fun var353 () String)
(declare-fun var355 () String)
(declare-fun var356 () String)
(declare-fun var357 () String)
(declare-fun var359 () String)
(declare-fun var360 () String)
(declare-fun var361 () String)
(declare-fun var363 () String)
(declare-fun var364 () Int)
(declare-fun var365 () String)
(declare-fun var367 () String)
(declare-fun var369 () String)
(declare-fun var371 () String)
(declare-fun var373 () String)
(declare-fun var375 () String)
(declare-fun var374 () String)
(declare-fun var376 () String)
(declare-fun var378 () String)
(declare-fun var379 () Int)
(declare-fun var380 () Int)
(declare-fun var384 () String)
(declare-fun var385 () String)
(declare-fun var386 () String)
(declare-fun var388 () String)
(declare-fun var390 () String)
(declare-fun var391 () String)
(declare-fun var392 () String)
(declare-fun var394 () String)
(declare-fun var395 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= true (= sv1 sv2 ) ))
(assert (= true (str.in.re var430 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "'") (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.++ (re.+  (str.to.re " ") )  (str.to.re "'"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "'") (re.++ (re.* re.allchar ) (re.++  (str.to.re "=") (re.++ (re.* re.allchar )  (str.to.re "'"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "'") (re.++ (re.*  (str.to.re " ") )  (re.union  (re.++  (str.to.re "\x2d")  (str.to.re "\x2d"))  (str.to.re "\x23")))) ) ) ))
(assert (= true (= (str.++ var397 var356 ) var395 ) ))
(assert (= true (= (str.++ var398 "WHERE o_w_id = '" ) var397 ) ))
(assert (= true (= (str.++ var400 "FROM tpcc_orderr" ) var398 ) ))
(assert (= true (= (str.++ var402 "SELECT o_id, o_carrier_id, o_entry_d" ) var400 ) ))
(assert (= true (= (str.++ var404 "SELECT \x2a FROM \x28" ) var402 ) ))
(assert (= true (or (= var391 var407 ) (= var391 var406 ) ) ))
(assert (= true (not (= 0 var408 )) ))
(assert (= true (= var411 var410 ) ))
(assert (= true (= (str.++ var412 "'" ) var411 ) ))
(assert (= true (= (str.++ var413 var356 ) var412 ) ))
(assert (= true (= (str.++ var414 "' AND c_w_id = '" ) var413 ) ))
(assert (= true (= (str.++ var416 var360 ) var414 ) ))
(assert (= true (= (str.++ var417 "' AND c_d_id = '" ) var416 ) ))
(assert (= true (= (str.++ var419 var407 ) var417 ) ))
(assert (= true (= (str.++ var420 "WHERE c_id = '" ) var419 ) ))
(assert (= true (= (str.++ var422 "FROM tpcc_customer" ) var420 ) ))
(assert (= true (= (str.++ var424 "SELECT c_balance, c_first, c_middle, c_last" ) var422 ) ))
(assert (= true (= 0 var426 ) ))
(assert (= true (= var360 var429 ) ))
(assert (= true (= var356 var428 ) ))
(assert (= true (= var407 var430 ) ))
(assert (= true (= var352 var350 ) ))
(assert (= true (= (str.++ var353 "'" ) var352 ) ))
(assert (= true (= (str.++ var355 var356 ) var353 ) ))
(assert (= true (= (str.++ var357 "' AND ol_w_id = '" ) var355 ) ))
(assert (= true (= (str.++ var359 var360 ) var357 ) ))
(assert (= true (= (str.++ var361 "AND ol_d_id = '" ) var359 ) ))
(assert (= true (= (str.++ var363 (int.to.str var364 ) ) var361 ) ))
(assert (= true (= (str.++ var365 "WHERE ol_o_id =" ) var363 ) ))
(assert (= true (= (str.++ var367 "FROM tpcc_order_line" ) var365 ) ))
(assert (= true (= (str.++ var369 "ol_amount, ol_delivery_d" ) var367 ) ))
(assert (= true (= (str.++ var371 "SELECT ol_i_id, ol_supply_w_id, ol_quantity," ) var369 ) ))
(assert (= true (or (= var373 var374 ) (= var373 var375 ) ) ))
(assert (= true (or (= var376 var378 ) (= (str.to.int var376 ) (- 1) ) ) ))
(assert (= true (or (= var364 (- 1) ) (= var364 var379 ) ) ))
(assert (= true (= 0 var380 ) ))
(assert (= true (= var385 var384 ) ))
(assert (= true (= (str.++ var386 "\x29 WHERE rownum = 1" ) var385 ) ))
(assert (= true (= (str.++ var388 "' ORDER BY o_id DESC" ) var386 ) ))
(assert (= true (= (str.++ var390 var391 ) var388 ) ))
(assert (= true (= (str.++ var392 "' AND o_c_id = '" ) var390 ) ))
(assert (= true (= (str.++ var394 var360 ) var392 ) ))
(assert (= true (= (str.++ var395 "' AND o_d_id = '" ) var394 ) ))

(check-sat)
(get-model)