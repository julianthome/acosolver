(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var266 () String)
(declare-fun var268 () String)
(declare-fun var188 () String)
(declare-fun var190 () String)
(declare-fun var191 () String)
(declare-fun var193 () String)
(declare-fun var194 () String)
(declare-fun var195 () String)
(declare-fun var197 () String)
(declare-fun var198 () String)
(declare-fun var199 () String)
(declare-fun var201 () String)
(declare-fun var202 () Int)
(declare-fun var203 () String)
(declare-fun var205 () String)
(declare-fun var207 () String)
(declare-fun var209 () String)
(declare-fun var211 () String)
(declare-fun var213 () String)
(declare-fun var212 () String)
(declare-fun var214 () String)
(declare-fun var216 () String)
(declare-fun var217 () Int)
(declare-fun var218 () Int)
(declare-fun var222 () String)
(declare-fun var223 () String)
(declare-fun var224 () String)
(declare-fun var226 () String)
(declare-fun var228 () String)
(declare-fun var229 () String)
(declare-fun var230 () String)
(declare-fun var232 () String)
(declare-fun var233 () String)
(declare-fun var235 () String)
(declare-fun var236 () String)
(declare-fun var238 () String)
(declare-fun var240 () String)
(declare-fun var242 () String)
(declare-fun var244 () String)
(declare-fun var245 () String)
(declare-fun var246 () Int)
(declare-fun var248 () String)
(declare-fun var249 () String)
(declare-fun var250 () String)
(declare-fun var251 () String)
(declare-fun var252 () String)
(declare-fun var254 () String)
(declare-fun var255 () String)
(declare-fun var257 () String)
(declare-fun var258 () String)
(declare-fun var260 () String)
(declare-fun var262 () String)
(declare-fun var264 () Int)
(declare-fun var267 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= true (= sv1 sv2 ) ))
(assert (= true (str.in.re var266 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "'") (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.++ (re.+  (str.to.re " ") )  (str.to.re "'"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "'") (re.++ (re.* re.allchar ) (re.++  (str.to.re "=") (re.++ (re.* re.allchar )  (str.to.re "'"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "'") (re.++ (re.*  (str.to.re " ") )  (re.union  (re.++  (str.to.re "\x2d")  (str.to.re "\x2d"))  (str.to.re "\x23")))) ) ) ))
(assert (= true (= var194 var266 ) ))
(assert (= true (= var245 var268 ) ))
(assert (= true (= var190 var188 ) ))
(assert (= true (= (str.++ var191 "'" ) var190 ) ))
(assert (= true (= (str.++ var193 var194 ) var191 ) ))
(assert (= true (= (str.++ var195 "' AND ol_w_id = '" ) var193 ) ))
(assert (= true (= (str.++ var197 var198 ) var195 ) ))
(assert (= true (= (str.++ var199 "AND ol_d_id = '" ) var197 ) ))
(assert (= true (= (str.++ var201 (int.to.str var202 ) ) var199 ) ))
(assert (= true (= (str.++ var203 "WHERE ol_o_id =" ) var201 ) ))
(assert (= true (= (str.++ var205 "FROM tpcc_order_line" ) var203 ) ))
(assert (= true (= (str.++ var207 "ol_amount, ol_delivery_d" ) var205 ) ))
(assert (= true (= (str.++ var209 "SELECT ol_i_id, ol_supply_w_id, ol_quantity," ) var207 ) ))
(assert (= true (or (= var211 var212 ) (= var211 var213 ) ) ))
(assert (= true (or (= var214 var216 ) (= (str.to.int var214 ) (- 1) ) ) ))
(assert (= true (or (= var202 var217 ) (= var202 (- 1) ) ) ))
(assert (= true (= 0 var218 ) ))
(assert (= true (= var223 var222 ) ))
(assert (= true (= (str.++ var224 "\x29 WHERE rownum = 1" ) var223 ) ))
(assert (= true (= (str.++ var226 "' ORDER BY o_id DESC" ) var224 ) ))
(assert (= true (= (str.++ var228 var229 ) var226 ) ))
(assert (= true (= (str.++ var230 "' AND o_c_id = '" ) var228 ) ))
(assert (= true (= (str.++ var232 var198 ) var230 ) ))
(assert (= true (= (str.++ var233 "' AND o_d_id = '" ) var232 ) ))
(assert (= true (= (str.++ var235 var194 ) var233 ) ))
(assert (= true (= (str.++ var236 "WHERE o_w_id = '" ) var235 ) ))
(assert (= true (= (str.++ var238 "FROM tpcc_orderr" ) var236 ) ))
(assert (= true (= (str.++ var240 "SELECT o_id, o_carrier_id, o_entry_d" ) var238 ) ))
(assert (= true (= (str.++ var242 "SELECT \x2a FROM \x28" ) var240 ) ))
(assert (= true (or (= var229 var245 ) (= var229 var244 ) ) ))
(assert (= true (not (= 0 var246 )) ))
(assert (= true (= var249 var248 ) ))
(assert (= true (= (str.++ var250 "'" ) var249 ) ))
(assert (= true (= (str.++ var251 var194 ) var250 ) ))
(assert (= true (= (str.++ var252 "' AND c_w_id = '" ) var251 ) ))
(assert (= true (= (str.++ var254 var198 ) var252 ) ))
(assert (= true (= (str.++ var255 "' AND c_d_id = '" ) var254 ) ))
(assert (= true (= (str.++ var257 var245 ) var255 ) ))
(assert (= true (= (str.++ var258 "WHERE c_id = '" ) var257 ) ))
(assert (= true (= (str.++ var260 "FROM tpcc_customer" ) var258 ) ))
(assert (= true (= (str.++ var262 "SELECT c_balance, c_first, c_middle, c_last" ) var260 ) ))
(assert (= true (= 0 var264 ) ))
(assert (= true (= var198 var267 ) ))

(check-sat)
(get-model)