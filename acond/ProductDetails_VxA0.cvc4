(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var1 () String)
(declare-fun var2 () String)
(declare-fun var3 () String)
(declare-fun var4 () String)
(declare-fun var5 () String)
(declare-fun var7 () Int)
(declare-fun var8 () Int)
(declare-fun var10 () Int)
(declare-fun var11 () String)
(declare-fun var12 () String)
(declare-fun sv7 () Int)
(declare-fun sv8 () Int)

(assert (= true (>= sv7 sv8 ) ))
(assert (= true (str.in.re var4 (re.++ (re.++ (re.++  (re.++ (re.+ (re.range "0" "9") ) (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.+  (str.to.re " ") ))))) (str.to.re (int.to.str sv7 )) )  (re.++ (re.+  (str.to.re " ") ) (re.++  (str.to.re "\x3e") (re.++  (str.to.re "=") (re.+  (str.to.re " ") )))) ) (str.to.re (int.to.str sv8 )) ) ) ))
(assert (= true (= var2 var1 ) ))
(assert (= true (= (str.++ var3 var4 ) var2 ) ))
(assert (= true (= var5 var3 ) ))
(assert (= true (= "Select i_id, i_title, a_fname, a_lname, i_pub_date, i_publisher,  i_subject, i_desc, i_cost, i_srp, i_avail, i_isbn, i_page, i_dimensions, i_image from item, author where a_id = i_a_id and i_id ="  var5 ) ))
(assert (= true (< var8 var7 ) ))
(assert (= true (or (= var7 var10 ) (= var7 0 ) ) ))
(assert (= true (not (= var12 var11 )) ))

(check-sat)
(get-model)