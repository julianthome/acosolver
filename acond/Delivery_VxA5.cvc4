(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var496 () String)
(declare-fun var497 () String)
(declare-fun var499 () String)
(declare-fun var500 () Int)
(declare-fun var501 () String)
(declare-fun var503 () String)
(declare-fun var504 () Int)
(declare-fun var505 () String)
(declare-fun var507 () String)
(declare-fun var509 () String)
(declare-fun var511 () Int)
(declare-fun var513 () Int)
(declare-fun var514 () Int)
(declare-fun var516 () Int)
(declare-fun var517 () Int)
(declare-fun var518 () Int)
(declare-fun var521 () Int)
(declare-fun var524 () String)
(declare-fun var525 () String)
(declare-fun var526 () String)
(declare-fun var528 () String)
(declare-fun var530 () String)
(declare-fun var531 () String)
(declare-fun var533 () String)
(declare-fun var534 () String)
(declare-fun var536 () String)
(declare-fun var538 () String)
(declare-fun var540 () String)
(declare-fun var543 () Int)
(declare-fun var542 () Int)
(declare-fun var547 () String)
(declare-fun var490 () String)
(declare-fun var492 () String)
(declare-fun var493 () String)
(declare-fun var495 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= true (= sv1 sv2 ) ))
(assert (= true (str.in.re var547 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "'") (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.++ (re.+  (str.to.re " ") )  (str.to.re "'"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "'") (re.++ (re.* re.allchar ) (re.++  (str.to.re "=") (re.++ (re.* re.allchar )  (str.to.re "'"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "'") (re.++ (re.*  (str.to.re " ") )  (re.union  (re.++  (str.to.re "\x2d")  (str.to.re "\x2d"))  (str.to.re "\x23")))) ) ) ))
(assert (= true (= (str.++ var495 var496 ) var493 ) ))
(assert (= true (= (str.++ var497 "AND o_w_id = '" ) var495 ) ))
(assert (= true (= (str.++ var499 (int.to.str var500 ) ) var497 ) ))
(assert (= true (= (str.++ var501 "AND o_d_id =" ) var499 ) ))
(assert (= true (= (str.++ var503 (int.to.str var504 ) ) var501 ) ))
(assert (= true (= (str.++ var505 "WHERE o_id =" ) var503 ) ))
(assert (= true (= (str.++ var507 "FROM tpcc_orderr" ) var505 ) ))
(assert (= true (= (str.++ var509 "SELECT o_c_id" ) var507 ) ))
(assert (= true (not (= 0 var511 )) ))
(assert (= true (= 0 var513 ) ))
(assert (= true (or (= var514 0 ) (= var514 1 ) ) ))
(assert (= true (= 0 var516 ) ))
(assert (= true (= (- var518 1 ) var517 ) ))
(assert (= true (= var500 var518 ) ))
(assert (= true (= (- 1) var504 ) ))
(assert (= true (= 0 var521 ) ))
(assert (= true (= var525 var524 ) ))
(assert (= true (= (str.++ var526 "\x29 WHERE rownum = 1" ) var525 ) ))
(assert (= true (= (str.++ var528 "' ORDER BY no_o_id ASC" ) var526 ) ))
(assert (= true (= (str.++ var530 var496 ) var528 ) ))
(assert (= true (= (str.++ var531 "AND no_w_id = '" ) var530 ) ))
(assert (= true (= (str.++ var533 (int.to.str var500 ) ) var531 ) ))
(assert (= true (= (str.++ var534 "WHERE no_d_id =" ) var533 ) ))
(assert (= true (= (str.++ var536 "FROM tpcc_new_order" ) var534 ) ))
(assert (= true (= (str.++ var538 "SELECT no_o_id" ) var536 ) ))
(assert (= true (= (str.++ var540 "SELECT \x2a FROM \x28" ) var538 ) ))
(assert (= true (<= 0 var543 ) ))
(assert (= true (= 1 var542 ) ))
(assert (= true (= var496 var547 ) ))
(assert (= true (= var492 var490 ) ))
(assert (= true (= (str.++ var493 "'" ) var492 ) ))

(check-sat)
(get-model)