(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var38 () String)
(declare-fun var39 () String)
(declare-fun var41 () String)
(declare-fun var42 () String)
(declare-fun var43 () String)
(declare-fun var45 () String)
(declare-fun var47 () String)
(declare-fun var49 () Int)
(declare-fun var52 () String)
(declare-fun var51 () String)
(declare-fun var53 () String)
(declare-fun var28 () String)
(declare-fun var30 () String)
(declare-fun var31 () String)
(declare-fun var33 () String)
(declare-fun var34 () String)
(declare-fun var35 () String)
(declare-fun var37 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= true (= sv1 sv2 ) ))
(assert (= true (str.in.re var51 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "'") (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.++ (re.+  (str.to.re " ") )  (str.to.re "'"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "'") (re.++ (re.* re.allchar ) (re.++  (str.to.re "=") (re.++ (re.* re.allchar )  (str.to.re "'"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "'") (re.++ (re.*  (str.to.re " ") )  (re.union  (re.++  (str.to.re "\x2d")  (str.to.re "\x2d"))  (str.to.re "\x23")))) ) ) ))
(assert (= true (= (str.++ var37 var38 ) var35 ) ))
(assert (= true (= (str.++ var39 "' AND c_d_id = '" ) var37 ) ))
(assert (= true (= (str.++ var41 var42 ) var39 ) ))
(assert (= true (= (str.++ var43 "WHERE c_id = '" ) var41 ) ))
(assert (= true (= (str.++ var45 "FROM tpcc_customer" ) var43 ) ))
(assert (= true (= (str.++ var47 "SELECT c_balance, c_first, c_middle, c_last" ) var45 ) ))
(assert (= true (= 0 var49 ) ))
(assert (= true (= var38 var52 ) ))
(assert (= true (= var34 var51 ) ))
(assert (= true (= var42 var53 ) ))
(assert (= true (= var30 var28 ) ))
(assert (= true (= (str.++ var31 "'" ) var30 ) ))
(assert (= true (= (str.++ var33 var34 ) var31 ) ))
(assert (= true (= (str.++ var35 "' AND c_w_id = '" ) var33 ) ))

(check-sat)
(get-model)