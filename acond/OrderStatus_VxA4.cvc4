(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var269 () String)
(declare-fun var271 () String)
(declare-fun var272 () String)
(declare-fun var274 () String)
(declare-fun var275 () String)
(declare-fun var276 () String)
(declare-fun var278 () String)
(declare-fun var279 () String)
(declare-fun var280 () String)
(declare-fun var282 () String)
(declare-fun var283 () Int)
(declare-fun var284 () String)
(declare-fun var286 () String)
(declare-fun var288 () String)
(declare-fun var290 () String)
(declare-fun var292 () String)
(declare-fun var294 () String)
(declare-fun var293 () String)
(declare-fun var295 () String)
(declare-fun var297 () String)
(declare-fun var298 () Int)
(declare-fun var299 () Int)
(declare-fun var303 () String)
(declare-fun var304 () String)
(declare-fun var305 () String)
(declare-fun var307 () String)
(declare-fun var309 () String)
(declare-fun var310 () String)
(declare-fun var311 () String)
(declare-fun var313 () String)
(declare-fun var314 () String)
(declare-fun var316 () String)
(declare-fun var317 () String)
(declare-fun var319 () String)
(declare-fun var321 () String)
(declare-fun var323 () String)
(declare-fun var325 () String)
(declare-fun var326 () String)
(declare-fun var327 () Int)
(declare-fun var329 () String)
(declare-fun var330 () String)
(declare-fun var331 () String)
(declare-fun var332 () String)
(declare-fun var333 () String)
(declare-fun var335 () String)
(declare-fun var336 () String)
(declare-fun var338 () String)
(declare-fun var339 () String)
(declare-fun var341 () String)
(declare-fun var343 () String)
(declare-fun var345 () Int)
(declare-fun var348 () String)
(declare-fun var347 () String)
(declare-fun var349 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= true (= sv1 sv2 ) ))
(assert (= true (str.in.re var348 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "'") (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.++ (re.+  (str.to.re " ") )  (str.to.re "'"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "'") (re.++ (re.* re.allchar ) (re.++  (str.to.re "=") (re.++ (re.* re.allchar )  (str.to.re "'"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "'") (re.++ (re.*  (str.to.re " ") )  (re.union  (re.++  (str.to.re "\x2d")  (str.to.re "\x2d"))  (str.to.re "\x23")))) ) ) ))
(assert (= true (= var271 var269 ) ))
(assert (= true (= (str.++ var272 "'" ) var271 ) ))
(assert (= true (= (str.++ var274 var275 ) var272 ) ))
(assert (= true (= (str.++ var276 "' AND ol_w_id = '" ) var274 ) ))
(assert (= true (= (str.++ var278 var279 ) var276 ) ))
(assert (= true (= (str.++ var280 "AND ol_d_id = '" ) var278 ) ))
(assert (= true (= (str.++ var282 (int.to.str var283 ) ) var280 ) ))
(assert (= true (= (str.++ var284 "WHERE ol_o_id =" ) var282 ) ))
(assert (= true (= (str.++ var286 "FROM tpcc_order_line" ) var284 ) ))
(assert (= true (= (str.++ var288 "ol_amount, ol_delivery_d" ) var286 ) ))
(assert (= true (= (str.++ var290 "SELECT ol_i_id, ol_supply_w_id, ol_quantity," ) var288 ) ))
(assert (= true (or (= var292 var293 ) (= var292 var294 ) ) ))
(assert (= true (or (= var295 var297 ) (= (str.to.int var295 ) (- 1) ) ) ))
(assert (= true (or (= var283 var298 ) (= var283 (- 1) ) ) ))
(assert (= true (= 0 var299 ) ))
(assert (= true (= var304 var303 ) ))
(assert (= true (= (str.++ var305 "\x29 WHERE rownum = 1" ) var304 ) ))
(assert (= true (= (str.++ var307 "' ORDER BY o_id DESC" ) var305 ) ))
(assert (= true (= (str.++ var309 var310 ) var307 ) ))
(assert (= true (= (str.++ var311 "' AND o_c_id = '" ) var309 ) ))
(assert (= true (= (str.++ var313 var279 ) var311 ) ))
(assert (= true (= (str.++ var314 "' AND o_d_id = '" ) var313 ) ))
(assert (= true (= (str.++ var316 var275 ) var314 ) ))
(assert (= true (= (str.++ var317 "WHERE o_w_id = '" ) var316 ) ))
(assert (= true (= (str.++ var319 "FROM tpcc_orderr" ) var317 ) ))
(assert (= true (= (str.++ var321 "SELECT o_id, o_carrier_id, o_entry_d" ) var319 ) ))
(assert (= true (= (str.++ var323 "SELECT \x2a FROM \x28" ) var321 ) ))
(assert (= true (or (= var310 var326 ) (= var310 var325 ) ) ))
(assert (= true (not (= 0 var327 )) ))
(assert (= true (= var330 var329 ) ))
(assert (= true (= (str.++ var331 "'" ) var330 ) ))
(assert (= true (= (str.++ var332 var275 ) var331 ) ))
(assert (= true (= (str.++ var333 "' AND c_w_id = '" ) var332 ) ))
(assert (= true (= (str.++ var335 var279 ) var333 ) ))
(assert (= true (= (str.++ var336 "' AND c_d_id = '" ) var335 ) ))
(assert (= true (= (str.++ var338 var326 ) var336 ) ))
(assert (= true (= (str.++ var339 "WHERE c_id = '" ) var338 ) ))
(assert (= true (= (str.++ var341 "FROM tpcc_customer" ) var339 ) ))
(assert (= true (= (str.++ var343 "SELECT c_balance, c_first, c_middle, c_last" ) var341 ) ))
(assert (= true (= 0 var345 ) ))
(assert (= true (= var279 var348 ) ))
(assert (= true (= var275 var347 ) ))
(assert (= true (= var326 var349 ) ))

(check-sat)
(get-model)