(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var869 () String)
(declare-fun var871 () String)
(declare-fun var872 () String)
(declare-fun var874 () String)
(declare-fun var876 () String)
(declare-fun var877 () String)
(declare-fun var878 () String)
(declare-fun var880 () String)
(declare-fun var881 () String)
(declare-fun var882 () String)
(declare-fun var884 () String)
(declare-fun var885 () String)
(declare-fun var886 () String)
(declare-fun var888 () String)
(declare-fun var890 () String)
(declare-fun var892 () String)
(declare-fun var894 () String)
(declare-fun var895 () String)
(declare-fun var896 () Int)
(declare-fun var900 () String)
(declare-fun var901 () String)
(declare-fun var902 () String)
(declare-fun var904 () String)
(declare-fun var905 () String)
(declare-fun var907 () String)
(declare-fun var908 () String)
(declare-fun var910 () String)
(declare-fun var911 () String)
(declare-fun var913 () String)
(declare-fun var915 () String)
(declare-fun var917 () Int)
(declare-fun var920 () String)
(declare-fun var919 () String)
(declare-fun var921 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= true (= sv1 sv2 ) ))
(assert (= true (str.in.re var921 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "'") (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.++ (re.+  (str.to.re " ") )  (str.to.re "'"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "'") (re.++ (re.* re.allchar ) (re.++  (str.to.re "=") (re.++ (re.* re.allchar )  (str.to.re "'"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "'") (re.++ (re.*  (str.to.re " ") )  (re.union  (re.++  (str.to.re "\x2d")  (str.to.re "\x2d"))  (str.to.re "\x23")))) ) ) ))
(assert (= true (= var871 var869 ) ))
(assert (= true (= (str.++ var872 "\x29 WHERE rownum = 1" ) var871 ) ))
(assert (= true (= (str.++ var874 "' ORDER BY o_id DESC" ) var872 ) ))
(assert (= true (= (str.++ var876 var877 ) var874 ) ))
(assert (= true (= (str.++ var878 "' AND o_c_id = '" ) var876 ) ))
(assert (= true (= (str.++ var880 var881 ) var878 ) ))
(assert (= true (= (str.++ var882 "' AND o_d_id = '" ) var880 ) ))
(assert (= true (= (str.++ var884 var885 ) var882 ) ))
(assert (= true (= (str.++ var886 "WHERE o_w_id = '" ) var884 ) ))
(assert (= true (= (str.++ var888 "FROM tpcc_orderr" ) var886 ) ))
(assert (= true (= (str.++ var890 "SELECT o_id, o_carrier_id, o_entry_d" ) var888 ) ))
(assert (= true (= (str.++ var892 "SELECT \x2a FROM \x28" ) var890 ) ))
(assert (= true (or (= var877 var895 ) (= var877 var894 ) ) ))
(assert (= true (not (= 0 var896 )) ))
(assert (= true (= var901 var900 ) ))
(assert (= true (= (str.++ var902 "'" ) var901 ) ))
(assert (= true (= (str.++ var904 var885 ) var902 ) ))
(assert (= true (= (str.++ var905 "' AND c_w_id = '" ) var904 ) ))
(assert (= true (= (str.++ var907 var881 ) var905 ) ))
(assert (= true (= (str.++ var908 "' AND c_d_id = '" ) var907 ) ))
(assert (= true (= (str.++ var910 var895 ) var908 ) ))
(assert (= true (= (str.++ var911 "WHERE c_id = '" ) var910 ) ))
(assert (= true (= (str.++ var913 "FROM tpcc_customer" ) var911 ) ))
(assert (= true (= (str.++ var915 "SELECT c_balance, c_first, c_middle, c_last" ) var913 ) ))
(assert (= true (= 0 var917 ) ))
(assert (= true (= var881 var920 ) ))
(assert (= true (= var885 var919 ) ))
(assert (= true (= var895 var921 ) ))

(check-sat)
(get-model)