(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var308 () String)
(declare-fun var310 () String)
(declare-fun var311 () String)
(declare-fun var313 () String)
(declare-fun var314 () String)
(declare-fun var315 () String)
(declare-fun var317 () String)
(declare-fun var318 () Int)
(declare-fun var319 () String)
(declare-fun var321 () String)
(declare-fun var322 () Int)
(declare-fun var323 () String)
(declare-fun var325 () String)
(declare-fun var327 () String)
(declare-fun var328 () String)
(declare-fun var329 () String)
(declare-fun var333 () Int)
(declare-fun var336 () String)
(declare-fun var337 () String)
(declare-fun var338 () String)
(declare-fun var339 () String)
(declare-fun var340 () String)
(declare-fun var342 () String)
(declare-fun var343 () String)
(declare-fun var345 () String)
(declare-fun var346 () Int)
(declare-fun var347 () String)
(declare-fun var349 () String)
(declare-fun var351 () String)
(declare-fun var353 () Int)
(declare-fun var354 () String)
(declare-fun var355 () String)
(declare-fun var356 () String)
(declare-fun var357 () String)
(declare-fun var358 () String)
(declare-fun var359 () String)
(declare-fun var360 () String)
(declare-fun var361 () String)
(declare-fun var362 () String)
(declare-fun var363 () String)
(declare-fun var365 () Int)
(declare-fun var366 () String)
(declare-fun var367 () String)
(declare-fun var368 () String)
(declare-fun var369 () String)
(declare-fun var370 () String)
(declare-fun var372 () String)
(declare-fun var373 () String)
(declare-fun var375 () String)
(declare-fun var376 () String)
(declare-fun var378 () String)
(declare-fun var379 () String)
(declare-fun var380 () String)
(declare-fun var384 () Int)
(declare-fun var385 () String)
(declare-fun var386 () String)
(declare-fun var387 () String)
(declare-fun var388 () String)
(declare-fun var389 () String)
(declare-fun var390 () String)
(declare-fun var391 () String)
(declare-fun var392 () String)
(declare-fun var393 () String)
(declare-fun var395 () String)
(declare-fun var397 () String)
(declare-fun var399 () Int)
(declare-fun var400 () Int)
(declare-fun var401 () Int)
(declare-fun var403 () Int)
(declare-fun var404 () Int)
(declare-fun var405 () Int)
(declare-fun var408 () Int)
(declare-fun var410 () String)
(declare-fun var411 () String)
(declare-fun var412 () String)
(declare-fun var414 () String)
(declare-fun var416 () String)
(declare-fun var417 () String)
(declare-fun var419 () String)
(declare-fun var420 () String)
(declare-fun var422 () String)
(declare-fun var424 () String)
(declare-fun var426 () String)
(declare-fun var429 () Int)
(declare-fun var428 () Int)
(declare-fun var433 () String)
(declare-fun var434 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= true (= sv1 sv2 ) ))
(assert (= true (str.in.re var434 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "'") (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.++ (re.+  (str.to.re " ") )  (str.to.re "'"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "'") (re.++ (re.* re.allchar ) (re.++  (str.to.re "=") (re.++ (re.* re.allchar )  (str.to.re "'"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "'") (re.++ (re.*  (str.to.re " ") )  (re.union  (re.++  (str.to.re "\x2d")  (str.to.re "\x2d"))  (str.to.re "\x23")))) ) ) ))
(assert (= true (= var310 var308 ) ))
(assert (= true (= (str.++ var311 "'" ) var310 ) ))
(assert (= true (= (str.++ var313 var314 ) var311 ) ))
(assert (= true (= (str.++ var315 "AND c_w_id = '" ) var313 ) ))
(assert (= true (= (str.++ var317 (int.to.str var318 ) ) var315 ) ))
(assert (= true (= (str.++ var319 "AND c_d_id =" ) var317 ) ))
(assert (= true (= (str.++ var321 (int.to.str var322 ) ) var319 ) ))
(assert (= true (= (str.++ var323 "WHERE c_id =" ) var321 ) ))
(assert (= true (= (str.++ var325 ", c_delivery_cnt = c_delivery_cnt \x2b 1" ) var323 ) ))
(assert (= true (= (str.++ var327 var328 ) var325 ) ))
(assert (= true (= (str.++ var329 "UPDATE tpcc_customer SET c_balance = c_balance \x2b" ) var327 ) ))
(assert (= true (not (= 0 var333 )) ))
(assert (= true (= var337 var336 ) ))
(assert (= true (= (str.++ var338 "'" ) var337 ) ))
(assert (= true (= (str.++ var339 var314 ) var338 ) ))
(assert (= true (= (str.++ var340 "AND ol_w_id = '" ) var339 ) ))
(assert (= true (= (str.++ var342 (int.to.str var318 ) ) var340 ) ))
(assert (= true (= (str.++ var343 "AND ol_d_id =" ) var342 ) ))
(assert (= true (= (str.++ var345 (int.to.str var346 ) ) var343 ) ))
(assert (= true (= (str.++ var347 "WHERE ol_o_id =" ) var345 ) ))
(assert (= true (= (str.++ var349 "FROM tpcc_order_line" ) var347 ) ))
(assert (= true (= (str.++ var351 "SELECT SUM\x28ol_amount\x29 AS ol_total" ) var349 ) ))
(assert (= true (not (= 0 var353 )) ))
(assert (= true (= var355 var354 ) ))
(assert (= true (= (str.++ var356 "'" ) var355 ) ))
(assert (= true (= (str.++ var357 var314 ) var356 ) ))
(assert (= true (= (str.++ var358 "AND ol_w_id = '" ) var357 ) ))
(assert (= true (= (str.++ var359 (int.to.str var318 ) ) var358 ) ))
(assert (= true (= (str.++ var360 "AND ol_d_id =" ) var359 ) ))
(assert (= true (= (str.++ var361 (int.to.str var346 ) ) var360 ) ))
(assert (= true (= (str.++ var362 "WHERE ol_o_id =" ) var361 ) ))
(assert (= true (= (str.++ var363 "UPDATE tpcc_order_line SET ol_delivery_d =  SYSDATE" ) var362 ) ))
(assert (= true (not (= 0 var365 )) ))
(assert (= true (= var367 var366 ) ))
(assert (= true (= (str.++ var368 "'" ) var367 ) ))
(assert (= true (= (str.++ var369 var314 ) var368 ) ))
(assert (= true (= (str.++ var370 "AND o_w_id = '" ) var369 ) ))
(assert (= true (= (str.++ var372 (int.to.str var318 ) ) var370 ) ))
(assert (= true (= (str.++ var373 "AND o_d_id =" ) var372 ) ))
(assert (= true (= (str.++ var375 (int.to.str var346 ) ) var373 ) ))
(assert (= true (= (str.++ var376 "' WHERE o_id =" ) var375 ) ))
(assert (= true (= (str.++ var378 var379 ) var376 ) ))
(assert (= true (= (str.++ var380 "UPDATE tpcc_orderr SET o_carrier_id = '" ) var378 ) ))
(assert (= true (not (= 0 var384 )) ))
(assert (= true (= var386 var385 ) ))
(assert (= true (= (str.++ var387 "'" ) var386 ) ))
(assert (= true (= (str.++ var388 var314 ) var387 ) ))
(assert (= true (= (str.++ var389 "AND o_w_id = '" ) var388 ) ))
(assert (= true (= (str.++ var390 (int.to.str var318 ) ) var389 ) ))
(assert (= true (= (str.++ var391 "AND o_d_id =" ) var390 ) ))
(assert (= true (= (str.++ var392 (int.to.str var346 ) ) var391 ) ))
(assert (= true (= (str.++ var393 "WHERE o_id =" ) var392 ) ))
(assert (= true (= (str.++ var395 "FROM tpcc_orderr" ) var393 ) ))
(assert (= true (= (str.++ var397 "SELECT o_c_id" ) var395 ) ))
(assert (= true (not (= 0 var399 )) ))
(assert (= true (= 0 var400 ) ))
(assert (= true (or (= var401 0 ) (= var401 1 ) ) ))
(assert (= true (= 0 var403 ) ))
(assert (= true (= (- var405 1 ) var404 ) ))
(assert (= true (= var318 var405 ) ))
(assert (= true (= (- 1) var346 ) ))
(assert (= true (= 0 var408 ) ))
(assert (= true (= var411 var410 ) ))
(assert (= true (= (str.++ var412 "\x29 WHERE rownum = 1" ) var411 ) ))
(assert (= true (= (str.++ var414 "' ORDER BY no_o_id ASC" ) var412 ) ))
(assert (= true (= (str.++ var416 var314 ) var414 ) ))
(assert (= true (= (str.++ var417 "AND no_w_id = '" ) var416 ) ))
(assert (= true (= (str.++ var419 (int.to.str var318 ) ) var417 ) ))
(assert (= true (= (str.++ var420 "WHERE no_d_id =" ) var419 ) ))
(assert (= true (= (str.++ var422 "FROM tpcc_new_order" ) var420 ) ))
(assert (= true (= (str.++ var424 "SELECT no_o_id" ) var422 ) ))
(assert (= true (= (str.++ var426 "SELECT \x2a FROM \x28" ) var424 ) ))
(assert (= true (<= 0 var429 ) ))
(assert (= true (= 1 var428 ) ))
(assert (= true (= var314 var433 ) ))
(assert (= true (= var379 var434 ) ))

(check-sat)
(get-model)