(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var1000 () String)
(declare-fun var1002 () String)
(declare-fun var1003 () Int)
(declare-fun var1004 () String)
(declare-fun var1006 () String)
(declare-fun var1007 () String)
(declare-fun var1008 () String)
(declare-fun var1010 () Int)
(declare-fun var1014 () String)
(declare-fun var1015 () String)
(declare-fun var1016 () String)
(declare-fun var1017 () String)
(declare-fun var1018 () String)
(declare-fun var1019 () String)
(declare-fun var1020 () String)
(declare-fun var1021 () String)
(declare-fun var1022 () String)
(declare-fun var1024 () String)
(declare-fun var1026 () String)
(declare-fun var1028 () Int)
(declare-fun var1029 () Int)
(declare-fun var1030 () Int)
(declare-fun var1032 () Int)
(declare-fun var1033 () Int)
(declare-fun var1034 () Int)
(declare-fun var1037 () Int)
(declare-fun var1039 () String)
(declare-fun var1040 () String)
(declare-fun var1041 () String)
(declare-fun var1043 () String)
(declare-fun var1045 () String)
(declare-fun var1046 () String)
(declare-fun var1048 () String)
(declare-fun var1049 () String)
(declare-fun var1051 () String)
(declare-fun var1053 () String)
(declare-fun var1055 () String)
(declare-fun var1058 () Int)
(declare-fun var1057 () Int)
(declare-fun var1062 () String)
(declare-fun var1063 () String)
(declare-fun var989 () String)
(declare-fun var991 () String)
(declare-fun var992 () String)
(declare-fun var994 () String)
(declare-fun var995 () String)
(declare-fun var996 () String)
(declare-fun var998 () String)
(declare-fun var999 () Int)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= true (= sv1 sv2 ) ))
(assert (= true (str.in.re var1063 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "'") (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.++ (re.+  (str.to.re " ") )  (str.to.re "'"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "'") (re.++ (re.* re.allchar ) (re.++  (str.to.re "=") (re.++ (re.* re.allchar )  (str.to.re "'"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "'") (re.++ (re.*  (str.to.re " ") )  (re.union  (re.++  (str.to.re "\x2d")  (str.to.re "\x2d"))  (str.to.re "\x23")))) ) ) ))
(assert (= true (= (str.++ var998 (int.to.str var999 ) ) var996 ) ))
(assert (= true (= (str.++ var1000 "AND o_d_id =" ) var998 ) ))
(assert (= true (= (str.++ var1002 (int.to.str var1003 ) ) var1000 ) ))
(assert (= true (= (str.++ var1004 "' WHERE o_id =" ) var1002 ) ))
(assert (= true (= (str.++ var1006 var1007 ) var1004 ) ))
(assert (= true (= (str.++ var1008 "UPDATE tpcc_orderr SET o_carrier_id = '" ) var1006 ) ))
(assert (= true (not (= 0 var1010 )) ))
(assert (= true (= var1015 var1014 ) ))
(assert (= true (= (str.++ var1016 "'" ) var1015 ) ))
(assert (= true (= (str.++ var1017 var995 ) var1016 ) ))
(assert (= true (= (str.++ var1018 "AND o_w_id = '" ) var1017 ) ))
(assert (= true (= (str.++ var1019 (int.to.str var999 ) ) var1018 ) ))
(assert (= true (= (str.++ var1020 "AND o_d_id =" ) var1019 ) ))
(assert (= true (= (str.++ var1021 (int.to.str var1003 ) ) var1020 ) ))
(assert (= true (= (str.++ var1022 "WHERE o_id =" ) var1021 ) ))
(assert (= true (= (str.++ var1024 "FROM tpcc_orderr" ) var1022 ) ))
(assert (= true (= (str.++ var1026 "SELECT o_c_id" ) var1024 ) ))
(assert (= true (not (= 0 var1028 )) ))
(assert (= true (= 0 var1029 ) ))
(assert (= true (or (= var1030 0 ) (= var1030 1 ) ) ))
(assert (= true (= 0 var1032 ) ))
(assert (= true (= (- var1034 1 ) var1033 ) ))
(assert (= true (= var999 var1034 ) ))
(assert (= true (= (- 1) var1003 ) ))
(assert (= true (= 0 var1037 ) ))
(assert (= true (= var1040 var1039 ) ))
(assert (= true (= (str.++ var1041 "\x29 WHERE rownum = 1" ) var1040 ) ))
(assert (= true (= (str.++ var1043 "' ORDER BY no_o_id ASC" ) var1041 ) ))
(assert (= true (= (str.++ var1045 var995 ) var1043 ) ))
(assert (= true (= (str.++ var1046 "AND no_w_id = '" ) var1045 ) ))
(assert (= true (= (str.++ var1048 (int.to.str var999 ) ) var1046 ) ))
(assert (= true (= (str.++ var1049 "WHERE no_d_id =" ) var1048 ) ))
(assert (= true (= (str.++ var1051 "FROM tpcc_new_order" ) var1049 ) ))
(assert (= true (= (str.++ var1053 "SELECT no_o_id" ) var1051 ) ))
(assert (= true (= (str.++ var1055 "SELECT \x2a FROM \x28" ) var1053 ) ))
(assert (= true (<= 0 var1058 ) ))
(assert (= true (= 1 var1057 ) ))
(assert (= true (= var995 var1062 ) ))
(assert (= true (= var1007 var1063 ) ))
(assert (= true (= var991 var989 ) ))
(assert (= true (= (str.++ var992 "'" ) var991 ) ))
(assert (= true (= (str.++ var994 var995 ) var992 ) ))
(assert (= true (= (str.++ var996 "AND o_w_id = '" ) var994 ) ))

(check-sat)
(get-model)