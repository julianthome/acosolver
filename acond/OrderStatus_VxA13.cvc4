(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var816 () String)
(declare-fun var818 () String)
(declare-fun var819 () String)
(declare-fun var821 () String)
(declare-fun var823 () String)
(declare-fun var824 () String)
(declare-fun var825 () String)
(declare-fun var827 () String)
(declare-fun var828 () String)
(declare-fun var829 () String)
(declare-fun var831 () String)
(declare-fun var832 () String)
(declare-fun var833 () String)
(declare-fun var835 () String)
(declare-fun var837 () String)
(declare-fun var839 () String)
(declare-fun var841 () String)
(declare-fun var842 () String)
(declare-fun var843 () Int)
(declare-fun var847 () String)
(declare-fun var848 () String)
(declare-fun var849 () String)
(declare-fun var851 () String)
(declare-fun var852 () String)
(declare-fun var854 () String)
(declare-fun var855 () String)
(declare-fun var857 () String)
(declare-fun var858 () String)
(declare-fun var860 () String)
(declare-fun var862 () String)
(declare-fun var864 () Int)
(declare-fun var867 () String)
(declare-fun var866 () String)
(declare-fun var868 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= true (= sv1 sv2 ) ))
(assert (= true (str.in.re var867 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "'") (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.++ (re.+  (str.to.re " ") )  (str.to.re "'"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "'") (re.++ (re.* re.allchar ) (re.++  (str.to.re "=") (re.++ (re.* re.allchar )  (str.to.re "'"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "'") (re.++ (re.*  (str.to.re " ") )  (re.union  (re.++  (str.to.re "\x2d")  (str.to.re "\x2d"))  (str.to.re "\x23")))) ) ) ))
(assert (= true (= var818 var816 ) ))
(assert (= true (= (str.++ var819 "\x29 WHERE rownum = 1" ) var818 ) ))
(assert (= true (= (str.++ var821 "' ORDER BY o_id DESC" ) var819 ) ))
(assert (= true (= (str.++ var823 var824 ) var821 ) ))
(assert (= true (= (str.++ var825 "' AND o_c_id = '" ) var823 ) ))
(assert (= true (= (str.++ var827 var828 ) var825 ) ))
(assert (= true (= (str.++ var829 "' AND o_d_id = '" ) var827 ) ))
(assert (= true (= (str.++ var831 var832 ) var829 ) ))
(assert (= true (= (str.++ var833 "WHERE o_w_id = '" ) var831 ) ))
(assert (= true (= (str.++ var835 "FROM tpcc_orderr" ) var833 ) ))
(assert (= true (= (str.++ var837 "SELECT o_id, o_carrier_id, o_entry_d" ) var835 ) ))
(assert (= true (= (str.++ var839 "SELECT \x2a FROM \x28" ) var837 ) ))
(assert (= true (or (= var824 var842 ) (= var824 var841 ) ) ))
(assert (= true (not (= 0 var843 )) ))
(assert (= true (= var848 var847 ) ))
(assert (= true (= (str.++ var849 "'" ) var848 ) ))
(assert (= true (= (str.++ var851 var832 ) var849 ) ))
(assert (= true (= (str.++ var852 "' AND c_w_id = '" ) var851 ) ))
(assert (= true (= (str.++ var854 var828 ) var852 ) ))
(assert (= true (= (str.++ var855 "' AND c_d_id = '" ) var854 ) ))
(assert (= true (= (str.++ var857 var842 ) var855 ) ))
(assert (= true (= (str.++ var858 "WHERE c_id = '" ) var857 ) ))
(assert (= true (= (str.++ var860 "FROM tpcc_customer" ) var858 ) ))
(assert (= true (= (str.++ var862 "SELECT c_balance, c_first, c_middle, c_last" ) var860 ) ))
(assert (= true (= 0 var864 ) ))
(assert (= true (= var828 var867 ) ))
(assert (= true (= var832 var866 ) ))
(assert (= true (= var842 var868 ) ))

(check-sat)
(get-model)