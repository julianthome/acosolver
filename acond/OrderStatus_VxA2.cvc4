(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var80 () String)
(declare-fun var82 () String)
(declare-fun var83 () String)
(declare-fun var85 () String)
(declare-fun var86 () String)
(declare-fun var87 () String)
(declare-fun var89 () String)
(declare-fun var90 () String)
(declare-fun var91 () String)
(declare-fun var93 () String)
(declare-fun var94 () String)
(declare-fun var95 () String)
(declare-fun var97 () String)
(declare-fun var99 () String)
(declare-fun var101 () Int)
(declare-fun var104 () String)
(declare-fun var103 () String)
(declare-fun var105 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= true (= sv1 sv2 ) ))
(assert (= true (str.in.re var105 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "'") (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.++ (re.+  (str.to.re " ") )  (str.to.re "'"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "'") (re.++ (re.* re.allchar ) (re.++  (str.to.re "=") (re.++ (re.* re.allchar )  (str.to.re "'"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "'") (re.++ (re.*  (str.to.re " ") )  (re.union  (re.++  (str.to.re "\x2d")  (str.to.re "\x2d"))  (str.to.re "\x23")))) ) ) ))
(assert (= true (= var82 var80 ) ))
(assert (= true (= (str.++ var83 "'" ) var82 ) ))
(assert (= true (= (str.++ var85 var86 ) var83 ) ))
(assert (= true (= (str.++ var87 "' AND c_w_id = '" ) var85 ) ))
(assert (= true (= (str.++ var89 var90 ) var87 ) ))
(assert (= true (= (str.++ var91 "' AND c_d_id = '" ) var89 ) ))
(assert (= true (= (str.++ var93 var94 ) var91 ) ))
(assert (= true (= (str.++ var95 "WHERE c_id = '" ) var93 ) ))
(assert (= true (= (str.++ var97 "FROM tpcc_customer" ) var95 ) ))
(assert (= true (= (str.++ var99 "SELECT c_balance, c_first, c_middle, c_last" ) var97 ) ))
(assert (= true (= 0 var101 ) ))
(assert (= true (= var90 var104 ) ))
(assert (= true (= var86 var103 ) ))
(assert (= true (= var94 var105 ) ))

(check-sat)
(get-model)