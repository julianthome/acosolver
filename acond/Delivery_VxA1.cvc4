(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var125 () String)
(declare-fun var126 () String)
(declare-fun var127 () String)
(declare-fun var129 () Int)
(declare-fun var131 () String)
(declare-fun var132 () String)
(declare-fun var133 () String)
(declare-fun var134 () String)
(declare-fun var135 () String)
(declare-fun var136 () String)
(declare-fun var137 () String)
(declare-fun var138 () String)
(declare-fun var139 () String)
(declare-fun var141 () String)
(declare-fun var143 () String)
(declare-fun var145 () Int)
(declare-fun var146 () Int)
(declare-fun var147 () Int)
(declare-fun var149 () Int)
(declare-fun var150 () Int)
(declare-fun var151 () Int)
(declare-fun var154 () Int)
(declare-fun var156 () String)
(declare-fun var157 () String)
(declare-fun var158 () String)
(declare-fun var160 () String)
(declare-fun var162 () String)
(declare-fun var163 () String)
(declare-fun var165 () String)
(declare-fun var166 () String)
(declare-fun var168 () String)
(declare-fun var170 () String)
(declare-fun var172 () String)
(declare-fun var175 () Int)
(declare-fun var174 () Int)
(declare-fun var179 () String)
(declare-fun var180 () String)
(declare-fun var91 () String)
(declare-fun var93 () String)
(declare-fun var94 () String)
(declare-fun var96 () String)
(declare-fun var97 () String)
(declare-fun var98 () String)
(declare-fun var100 () String)
(declare-fun var101 () Int)
(declare-fun var102 () String)
(declare-fun var104 () String)
(declare-fun var105 () Int)
(declare-fun var106 () String)
(declare-fun var108 () String)
(declare-fun var110 () Int)
(declare-fun var113 () String)
(declare-fun var114 () String)
(declare-fun var115 () String)
(declare-fun var116 () String)
(declare-fun var117 () String)
(declare-fun var119 () String)
(declare-fun var120 () String)
(declare-fun var122 () String)
(declare-fun var123 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= true (= sv1 sv2 ) ))
(assert (= true (str.in.re var180 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "'") (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.++ (re.+  (str.to.re " ") )  (str.to.re "'"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "'") (re.++ (re.* re.allchar ) (re.++  (str.to.re "=") (re.++ (re.* re.allchar )  (str.to.re "'"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "'") (re.++ (re.*  (str.to.re " ") )  (re.union  (re.++  (str.to.re "\x2d")  (str.to.re "\x2d"))  (str.to.re "\x23")))) ) ) ))
(assert (= true (= (str.++ var125 var126 ) var123 ) ))
(assert (= true (= (str.++ var127 "UPDATE tpcc_orderr SET o_carrier_id = '" ) var125 ) ))
(assert (= true (not (= 0 var129 )) ))
(assert (= true (= var132 var131 ) ))
(assert (= true (= (str.++ var133 "'" ) var132 ) ))
(assert (= true (= (str.++ var134 var97 ) var133 ) ))
(assert (= true (= (str.++ var135 "AND o_w_id = '" ) var134 ) ))
(assert (= true (= (str.++ var136 (int.to.str var101 ) ) var135 ) ))
(assert (= true (= (str.++ var137 "AND o_d_id =" ) var136 ) ))
(assert (= true (= (str.++ var138 (int.to.str var105 ) ) var137 ) ))
(assert (= true (= (str.++ var139 "WHERE o_id =" ) var138 ) ))
(assert (= true (= (str.++ var141 "FROM tpcc_orderr" ) var139 ) ))
(assert (= true (= (str.++ var143 "SELECT o_c_id" ) var141 ) ))
(assert (= true (not (= 0 var145 )) ))
(assert (= true (= 0 var146 ) ))
(assert (= true (or (= var147 0 ) (= var147 1 ) ) ))
(assert (= true (= 0 var149 ) ))
(assert (= true (= (- var151 1 ) var150 ) ))
(assert (= true (= var101 var151 ) ))
(assert (= true (= (- 1) var105 ) ))
(assert (= true (= 0 var154 ) ))
(assert (= true (= var157 var156 ) ))
(assert (= true (= (str.++ var158 "\x29 WHERE rownum = 1" ) var157 ) ))
(assert (= true (= (str.++ var160 "' ORDER BY no_o_id ASC" ) var158 ) ))
(assert (= true (= (str.++ var162 var97 ) var160 ) ))
(assert (= true (= (str.++ var163 "AND no_w_id = '" ) var162 ) ))
(assert (= true (= (str.++ var165 (int.to.str var101 ) ) var163 ) ))
(assert (= true (= (str.++ var166 "WHERE no_d_id =" ) var165 ) ))
(assert (= true (= (str.++ var168 "FROM tpcc_new_order" ) var166 ) ))
(assert (= true (= (str.++ var170 "SELECT no_o_id" ) var168 ) ))
(assert (= true (= (str.++ var172 "SELECT \x2a FROM \x28" ) var170 ) ))
(assert (= true (<= 0 var175 ) ))
(assert (= true (= 1 var174 ) ))
(assert (= true (= var97 var179 ) ))
(assert (= true (= var126 var180 ) ))
(assert (= true (= var93 var91 ) ))
(assert (= true (= (str.++ var94 "'" ) var93 ) ))
(assert (= true (= (str.++ var96 var97 ) var94 ) ))
(assert (= true (= (str.++ var98 "AND ol_w_id = '" ) var96 ) ))
(assert (= true (= (str.++ var100 (int.to.str var101 ) ) var98 ) ))
(assert (= true (= (str.++ var102 "AND ol_d_id =" ) var100 ) ))
(assert (= true (= (str.++ var104 (int.to.str var105 ) ) var102 ) ))
(assert (= true (= (str.++ var106 "WHERE ol_o_id =" ) var104 ) ))
(assert (= true (= (str.++ var108 "UPDATE tpcc_order_line SET ol_delivery_d =  SYSDATE" ) var106 ) ))
(assert (= true (not (= 0 var110 )) ))
(assert (= true (= var114 var113 ) ))
(assert (= true (= (str.++ var115 "'" ) var114 ) ))
(assert (= true (= (str.++ var116 var97 ) var115 ) ))
(assert (= true (= (str.++ var117 "AND o_w_id = '" ) var116 ) ))
(assert (= true (= (str.++ var119 (int.to.str var101 ) ) var117 ) ))
(assert (= true (= (str.++ var120 "AND o_d_id =" ) var119 ) ))
(assert (= true (= (str.++ var122 (int.to.str var105 ) ) var120 ) ))
(assert (= true (= (str.++ var123 "' WHERE o_id =" ) var122 ) ))

(check-sat)
(get-model)