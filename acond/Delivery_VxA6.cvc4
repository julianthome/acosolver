(set-logic QF_S)
(set-option :produce-models true)
(set-option :strings-exp true)
(declare-fun var607 () String)
(declare-fun var609 () String)
(declare-fun var610 () String)
(declare-fun var612 () String)
(declare-fun var613 () String)
(declare-fun var614 () String)
(declare-fun var616 () String)
(declare-fun var617 () Int)
(declare-fun var618 () String)
(declare-fun var620 () String)
(declare-fun var621 () Int)
(declare-fun var622 () String)
(declare-fun var624 () String)
(declare-fun var626 () String)
(declare-fun var628 () Int)
(declare-fun var631 () String)
(declare-fun var632 () String)
(declare-fun var633 () String)
(declare-fun var634 () String)
(declare-fun var635 () String)
(declare-fun var636 () String)
(declare-fun var637 () String)
(declare-fun var638 () String)
(declare-fun var639 () String)
(declare-fun var640 () String)
(declare-fun var642 () Int)
(declare-fun var643 () String)
(declare-fun var644 () String)
(declare-fun var645 () String)
(declare-fun var646 () String)
(declare-fun var647 () String)
(declare-fun var649 () String)
(declare-fun var650 () String)
(declare-fun var652 () String)
(declare-fun var653 () String)
(declare-fun var655 () String)
(declare-fun var656 () String)
(declare-fun var657 () String)
(declare-fun var659 () Int)
(declare-fun var661 () String)
(declare-fun var662 () String)
(declare-fun var663 () String)
(declare-fun var664 () String)
(declare-fun var665 () String)
(declare-fun var666 () String)
(declare-fun var667 () String)
(declare-fun var668 () String)
(declare-fun var669 () String)
(declare-fun var671 () String)
(declare-fun var673 () String)
(declare-fun var675 () Int)
(declare-fun var676 () Int)
(declare-fun var677 () Int)
(declare-fun var679 () Int)
(declare-fun var680 () Int)
(declare-fun var681 () Int)
(declare-fun var684 () Int)
(declare-fun var686 () String)
(declare-fun var687 () String)
(declare-fun var688 () String)
(declare-fun var690 () String)
(declare-fun var692 () String)
(declare-fun var693 () String)
(declare-fun var695 () String)
(declare-fun var696 () String)
(declare-fun var698 () String)
(declare-fun var700 () String)
(declare-fun var702 () String)
(declare-fun var705 () Int)
(declare-fun var704 () Int)
(declare-fun var709 () String)
(declare-fun var710 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= true (= sv1 sv2 ) ))
(assert (= true (str.in.re var709 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "'") (re.++ (re.+  (str.to.re " ") ) (re.++  (re.union  (str.to.re "O")  (str.to.re "o")) (re.++  (re.union  (str.to.re "R")  (str.to.re "r")) (re.++ (re.+  (str.to.re " ") )  (str.to.re "'"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "'") (re.++ (re.* re.allchar ) (re.++  (str.to.re "=") (re.++ (re.* re.allchar )  (str.to.re "'"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "'") (re.++ (re.*  (str.to.re " ") )  (re.union  (re.++  (str.to.re "\x2d")  (str.to.re "\x2d"))  (str.to.re "\x23")))) ) ) ))
(assert (= true (= var609 var607 ) ))
(assert (= true (= (str.++ var610 "'" ) var609 ) ))
(assert (= true (= (str.++ var612 var613 ) var610 ) ))
(assert (= true (= (str.++ var614 "AND ol_w_id = '" ) var612 ) ))
(assert (= true (= (str.++ var616 (int.to.str var617 ) ) var614 ) ))
(assert (= true (= (str.++ var618 "AND ol_d_id =" ) var616 ) ))
(assert (= true (= (str.++ var620 (int.to.str var621 ) ) var618 ) ))
(assert (= true (= (str.++ var622 "WHERE ol_o_id =" ) var620 ) ))
(assert (= true (= (str.++ var624 "FROM tpcc_order_line" ) var622 ) ))
(assert (= true (= (str.++ var626 "SELECT SUM\x28ol_amount\x29 AS ol_total" ) var624 ) ))
(assert (= true (not (= 0 var628 )) ))
(assert (= true (= var632 var631 ) ))
(assert (= true (= (str.++ var633 "'" ) var632 ) ))
(assert (= true (= (str.++ var634 var613 ) var633 ) ))
(assert (= true (= (str.++ var635 "AND ol_w_id = '" ) var634 ) ))
(assert (= true (= (str.++ var636 (int.to.str var617 ) ) var635 ) ))
(assert (= true (= (str.++ var637 "AND ol_d_id =" ) var636 ) ))
(assert (= true (= (str.++ var638 (int.to.str var621 ) ) var637 ) ))
(assert (= true (= (str.++ var639 "WHERE ol_o_id =" ) var638 ) ))
(assert (= true (= (str.++ var640 "UPDATE tpcc_order_line SET ol_delivery_d =  SYSDATE" ) var639 ) ))
(assert (= true (not (= 0 var642 )) ))
(assert (= true (= var644 var643 ) ))
(assert (= true (= (str.++ var645 "'" ) var644 ) ))
(assert (= true (= (str.++ var646 var613 ) var645 ) ))
(assert (= true (= (str.++ var647 "AND o_w_id = '" ) var646 ) ))
(assert (= true (= (str.++ var649 (int.to.str var617 ) ) var647 ) ))
(assert (= true (= (str.++ var650 "AND o_d_id =" ) var649 ) ))
(assert (= true (= (str.++ var652 (int.to.str var621 ) ) var650 ) ))
(assert (= true (= (str.++ var653 "' WHERE o_id =" ) var652 ) ))
(assert (= true (= (str.++ var655 var656 ) var653 ) ))
(assert (= true (= (str.++ var657 "UPDATE tpcc_orderr SET o_carrier_id = '" ) var655 ) ))
(assert (= true (not (= 0 var659 )) ))
(assert (= true (= var662 var661 ) ))
(assert (= true (= (str.++ var663 "'" ) var662 ) ))
(assert (= true (= (str.++ var664 var613 ) var663 ) ))
(assert (= true (= (str.++ var665 "AND o_w_id = '" ) var664 ) ))
(assert (= true (= (str.++ var666 (int.to.str var617 ) ) var665 ) ))
(assert (= true (= (str.++ var667 "AND o_d_id =" ) var666 ) ))
(assert (= true (= (str.++ var668 (int.to.str var621 ) ) var667 ) ))
(assert (= true (= (str.++ var669 "WHERE o_id =" ) var668 ) ))
(assert (= true (= (str.++ var671 "FROM tpcc_orderr" ) var669 ) ))
(assert (= true (= (str.++ var673 "SELECT o_c_id" ) var671 ) ))
(assert (= true (not (= 0 var675 )) ))
(assert (= true (= 0 var676 ) ))
(assert (= true (or (= var677 0 ) (= var677 1 ) ) ))
(assert (= true (= 0 var679 ) ))
(assert (= true (= (- var681 1 ) var680 ) ))
(assert (= true (= var617 var681 ) ))
(assert (= true (= (- 1) var621 ) ))
(assert (= true (= 0 var684 ) ))
(assert (= true (= var687 var686 ) ))
(assert (= true (= (str.++ var688 "\x29 WHERE rownum = 1" ) var687 ) ))
(assert (= true (= (str.++ var690 "' ORDER BY no_o_id ASC" ) var688 ) ))
(assert (= true (= (str.++ var692 var613 ) var690 ) ))
(assert (= true (= (str.++ var693 "AND no_w_id = '" ) var692 ) ))
(assert (= true (= (str.++ var695 (int.to.str var617 ) ) var693 ) ))
(assert (= true (= (str.++ var696 "WHERE no_d_id =" ) var695 ) ))
(assert (= true (= (str.++ var698 "FROM tpcc_new_order" ) var696 ) ))
(assert (= true (= (str.++ var700 "SELECT no_o_id" ) var698 ) ))
(assert (= true (= (str.++ var702 "SELECT \x2a FROM \x28" ) var700 ) ))
(assert (= true (<= 0 var705 ) ))
(assert (= true (= 1 var704 ) ))
(assert (= true (= var613 var709 ) ))
(assert (= true (= var656 var710 ) ))

(check-sat)
(get-model)